// <auto-generated />
using GenerationN.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenerationN.Migrations
{
    [DbContext(typeof(ModelMainContext))]
    partial class ModelMainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenerationN.Models.ModelMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("coreWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endingFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endingOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endingThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endingTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prefixOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prefixTwo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModelMains");
                });
#pragma warning restore 612, 618
        }
    }
}
